/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MinimalForwarder,
  MinimalForwarderInterface,
} from '../MinimalForwarder';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'from',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'gas',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct MinimalForwarder.ForwardRequest',
        name: 'req',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
    ],
    name: 'getNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'from',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'gas',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct MinimalForwarder.ForwardRequest',
        name: 'req',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'getSigner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'from',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'gas',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct MinimalForwarder.ForwardRequest',
        name: 'req',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'verify',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x6101206040523480156200001257600080fd5b506040518060400160405280601081526020017f4d696e696d616c466f72776172646572000000000000000000000000000000008152506040518060400160405280600581526020017f302e302e3100000000000000000000000000000000000000000000000000000081525060008280519060200120905060008280519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90508260c081815250508160e081815250504660a08181525050620000e78184846200010260201b60201c565b60808181525050806101008181525050505050505062000216565b600083838346306040516020016200011f95949392919062000171565b6040516020818303038152906040528051906020012090509392505050565b6200014981620001ce565b82525050565b6200015a81620001e2565b82525050565b6200016b816200020c565b82525050565b600060a0820190506200018860008301886200014f565b6200019760208301876200014f565b620001a660408301866200014f565b620001b5606083018562000160565b620001c460808301846200013e565b9695505050505050565b6000620001db82620001ec565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60805160a05160c05160e0516101005161138b6200025b60003960006107500152600061079201526000610771015260006106fd01526000610725015261138b6000f3fe60806040526004361061003f5760003560e01c80632d0335ab1461004457806347153f8214610081578063a5c267b5146100b2578063bf5d3bdb146100f0575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610a78565b61012d565b60405161007891906110b7565b60405180910390f35b61009b60048036038101906100969190610aa1565b610175565b6040516100a9929190610ee0565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d49190610aa1565b61034d565b6040516100e7929190610e9c565b60405180910390f35b3480156100fc57600080fd5b5061011760048036038101906101129190610aa1565b61047b565b6040516101249190610ec5565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000606061018485858561047b565b6101c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ba90611037565b60405180910390fd5b600185608001356101d4919061116c565b6000808760000160208101906101ea9190610a78565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008086602001602081019061023e9190610a78565b73ffffffffffffffffffffffffffffffffffffffff1687606001358860400135898060a0019061026e91906110d2565b8b60000160208101906102819190610a78565b60405160200161029393929190610e24565b6040516020818303038152906040526040516102af9190610e4e565b600060405180830381858888f193505050503d80600081146102ed576040519150601f19603f3d011682016040523d82523d6000602084013e6102f2565b606091505b5091509150603f876060013561030891906111c2565b5a1161033d577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b8181935093505050935093915050565b600080600061045885858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061044a7fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e488960000160208101906103d19190610a78565b8a60200160208101906103e49190610a78565b8b604001358c606001358d608001358e8060a0019061040391906110d2565b604051610411929190610e0b565b604051809103902060405160200161042f9796959493929190610f10565b60405160208183030381529060405280519060200120610630565b61064a90919063ffffffff16565b90508086600001602081019061046e9190610a78565b9250925050935093915050565b60008061058484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506105767fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e488860000160208101906104fd9190610a78565b8960200160208101906105109190610a78565b8a604001358b606001358c608001358d8060a0019061052f91906110d2565b60405161053d929190610e0b565b604051809103902060405160200161055b9796959493929190610f10565b60405160208183030381529060405280519060200120610630565b61064a90919063ffffffff16565b905084608001356000808760000160208101906105a19190610a78565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414801561062657508460000160208101906105f79190610a78565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b9150509392505050565b600061064361063d6106f9565b836107bc565b9050919050565b60006041825114156106895760008060006020850151925060408501519150606085015160001a905061067f868285856107ef565b93505050506106f3565b6040825114156106b85760008060208401519150604084015190506106af85838361097a565b925050506106f3565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ea90611057565b60405180910390fd5b92915050565b60007f000000000000000000000000000000000000000000000000000000000000000046141561074b577f000000000000000000000000000000000000000000000000000000000000000090506107b9565b6107b67f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006109c4565b90505b90565b600082826040516020016107d1929190610e65565b60405160208183030381529060405280519060200120905092915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08260001c1115610857576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084e90611077565b60405180910390fd5b601b8460ff16148061086c5750601c8460ff16145b6108ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a290611097565b60405180910390fd5b6000600186868686604051600081526020016040526040516108d09493929190610fd2565b6020604051602081039080840390855afa1580156108f2573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561096e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096590611017565b60405180910390fd5b80915050949350505050565b60008060007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84169150601b8460ff1c0190506109b9868287856107ef565b925050509392505050565b600083838346306040516020016109df959493929190610f7f565b6040516020818303038152906040528051906020012090509392505050565b600081359050610a0d8161133e565b92915050565b60008083601f840112610a2557600080fd5b8235905067ffffffffffffffff811115610a3e57600080fd5b602083019150836001820283011115610a5657600080fd5b9250929050565b600060c08284031215610a6f57600080fd5b81905092915050565b600060208284031215610a8a57600080fd5b6000610a98848285016109fe565b91505092915050565b600080600060408486031215610ab657600080fd5b600084013567ffffffffffffffff811115610ad057600080fd5b610adc86828701610a5d565b935050602084013567ffffffffffffffff811115610af957600080fd5b610b0586828701610a13565b92509250509250925092565b610b1a816111f3565b82525050565b610b31610b2c826111f3565b611294565b82525050565b610b4081611205565b82525050565b610b4f81611211565b82525050565b610b66610b6182611211565b6112a6565b82525050565b6000610b788385611145565b9350610b85838584611252565b82840190509392505050565b6000610b9c82611129565b610ba68185611134565b9350610bb6818560208601611261565b610bbf81611320565b840191505092915050565b6000610bd582611129565b610bdf8185611145565b9350610bef818560208601611261565b80840191505092915050565b6000610c08601883611150565b91507f45434453413a20696e76616c6964207369676e617475726500000000000000006000830152602082019050919050565b6000610c48603283611150565b91507f4d696e696d616c466f727761726465723a207369676e617475726520646f657360008301527f206e6f74206d61746368207265717565737400000000000000000000000000006020830152604082019050919050565b6000610cae601f83611150565b91507f45434453413a20696e76616c6964207369676e6174757265206c656e677468006000830152602082019050919050565b6000610cee600283611161565b91507f19010000000000000000000000000000000000000000000000000000000000006000830152600282019050919050565b6000610d2e602283611150565b91507f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008301527f75650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d94602283611150565b91507f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008301527f75650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610df68161123b565b82525050565b610e0581611245565b82525050565b6000610e18828486610b6c565b91508190509392505050565b6000610e31828587610b6c565b9150610e3d8284610b20565b601482019150819050949350505050565b6000610e5a8284610bca565b915081905092915050565b6000610e7082610ce1565b9150610e7c8285610b55565b602082019150610e8c8284610b55565b6020820191508190509392505050565b6000604082019050610eb16000830185610b11565b610ebe6020830184610b11565b9392505050565b6000602082019050610eda6000830184610b37565b92915050565b6000604082019050610ef56000830185610b37565b8181036020830152610f078184610b91565b90509392505050565b600060e082019050610f25600083018a610b46565b610f326020830189610b11565b610f3f6040830188610b11565b610f4c6060830187610ded565b610f596080830186610ded565b610f6660a0830185610ded565b610f7360c0830184610b46565b98975050505050505050565b600060a082019050610f946000830188610b46565b610fa16020830187610b46565b610fae6040830186610b46565b610fbb6060830185610ded565b610fc86080830184610b11565b9695505050505050565b6000608082019050610fe76000830187610b46565b610ff46020830186610dfc565b6110016040830185610b46565b61100e6060830184610b46565b95945050505050565b6000602082019050818103600083015261103081610bfb565b9050919050565b6000602082019050818103600083015261105081610c3b565b9050919050565b6000602082019050818103600083015261107081610ca1565b9050919050565b6000602082019050818103600083015261109081610d21565b9050919050565b600060208201905081810360008301526110b081610d87565b9050919050565b60006020820190506110cc6000830184610ded565b92915050565b600080833560016020038436030381126110eb57600080fd5b80840192508235915067ffffffffffffffff82111561110957600080fd5b60208301925060018202360383131561112157600080fd5b509250929050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006111778261123b565b91506111828361123b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111b7576111b66112c2565b5b828201905092915050565b60006111cd8261123b565b91506111d88361123b565b9250826111e8576111e76112f1565b5b828204905092915050565b60006111fe8261121b565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b8381101561127f578082015181840152602081019050611264565b8381111561128e576000848401525b50505050565b600061129f826112b0565b9050919050565b6000819050919050565b60006112bb82611331565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b611347816111f3565b811461135257600080fd5b5056fea2646970667358221220a80ffe67bb0d6226f90ad0618b5ae31d2a2a1b834f20469e493a56e6e8b1961b64736f6c63430008000033';

export class MinimalForwarder__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MinimalForwarder> {
    return super.deploy(overrides || {}) as Promise<MinimalForwarder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MinimalForwarder {
    return super.attach(address) as MinimalForwarder;
  }
  connect(signer: Signer): MinimalForwarder__factory {
    return super.connect(signer) as MinimalForwarder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalForwarderInterface {
    return new utils.Interface(_abi) as MinimalForwarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinimalForwarder {
    return new Contract(address, _abi, signerOrProvider) as MinimalForwarder;
  }
}
